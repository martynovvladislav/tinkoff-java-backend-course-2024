/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer        id;
    private String         url;
    private OffsetDateTime updatedAt;
    private OffsetDateTime lastCheckedAt;
    private String         lastCommitSha;
    private Long           answersCount;

    public Link() {}

    public Link(Link value) {
        this.id = value.id;
        this.url = value.url;
        this.updatedAt = value.updatedAt;
        this.lastCheckedAt = value.lastCheckedAt;
        this.lastCommitSha = value.lastCommitSha;
        this.answersCount = value.answersCount;
    }

    @ConstructorProperties({ "id", "url", "updatedAt", "lastCheckedAt", "lastCommitSha", "answersCount" })
    public Link(
        @NotNull Integer        id,
        @NotNull String         url,
        @NotNull OffsetDateTime updatedAt,
        @NotNull OffsetDateTime lastCheckedAt,
        @Nullable String         lastCommitSha,
        @Nullable Long           answersCount
    ) {
        this.id = id;
        this.url = url;
        this.updatedAt = updatedAt;
        this.lastCheckedAt = lastCheckedAt;
        this.lastCommitSha = lastCommitSha;
        this.answersCount = answersCount;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @NotNull
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@NotNull Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.UPDATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>LINK.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@NotNull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>LINK.LAST_CHECKED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastCheckedAt() {
        return this.lastCheckedAt;
    }

    /**
     * Setter for <code>LINK.LAST_CHECKED_AT</code>.
     */
    public void setLastCheckedAt(@NotNull OffsetDateTime lastCheckedAt) {
        this.lastCheckedAt = lastCheckedAt;
    }

    /**
     * Getter for <code>LINK.LAST_COMMIT_SHA</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getLastCommitSha() {
        return this.lastCommitSha;
    }

    /**
     * Setter for <code>LINK.LAST_COMMIT_SHA</code>.
     */
    public void setLastCommitSha(@Nullable String lastCommitSha) {
        this.lastCommitSha = lastCommitSha;
    }

    /**
     * Getter for <code>LINK.ANSWERS_COUNT</code>.
     */
    @Nullable
    public Long getAnswersCount() {
        return this.answersCount;
    }

    /**
     * Setter for <code>LINK.ANSWERS_COUNT</code>.
     */
    public void setAnswersCount(@Nullable Long answersCount) {
        this.answersCount = answersCount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(lastCheckedAt);
        sb.append(", ").append(lastCommitSha);
        sb.append(", ").append(answersCount);

        sb.append(")");
        return sb.toString();
    }
}
